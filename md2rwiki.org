#+STARTUP: entitiespretty

* Getting Started

Guide: https://github.com/adilapapaya/markdown-resume#feature-development

** Install php

Guide: https://www.jeffgeerling.com/blog/2018/installing-php-7-and-composer-on-windows-10-using-ubuntu-wsl

*** 1) Add PPA and update the app cache
#+begin_src 
sudo apt-add-repository ppa:ondrej/php
sudo apt-get update
#+end_src

Seems like ~ppa:ondrej/phpsudo~ has other versions.

*** 2) Install PHP and commonly-required extensions
#+begin_src 
sudo apt-get install -y git php7.0 php7.0-curl php7.0-xml php7.0-mbstring php7.0-gd php7.0-sqlite3 php7.0-mysql
#+end_src

*** 3) Verify PHP 7 is working
#+begin_src 
php -v
#+end_src

** Install wkhtmltopdf
Official instructions here
- https://github.com/pdfkit/pdfkit/wiki/Installing-WKHTMLTOPDF
- https://wkhtmltopdf.org/

*** But easier to just run
#+begin_src 
sudo apt-get install wkhtmltopdf
#+end_src

*** However, I eventually ran into problems and fixed them using the following
Guide: https://gist.github.com/faniska/37f896d5e9de5fee925925d7caf3cb9e

#+begin_src 
wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb  ## check website for latest version
sudo dpkg -i wkhtmltox_0.12.5-1.bionic_amd64.deb
## Ran into errors with dependencies here
sudo apt install -f  ## fixed dependency issues
sudo apt-get install -y openssl build-essential libssl-dev libxrender-dev git-core libx11-dev libxext-dev libfontconfig1-dev libfreetype6-dev fontconfig
sudo apt install ttf-mscorefonts-installer
sudo fc-cache -f -v
#+end_src
** Install Composer in ~markdown-resume~ directory

Guide: https://getcomposer.org/download/

NOTE: Seems like instructions change. Check website above for updated instructions and hash etc...

*** 1) Download the installer

#+BEGIN_SRC 
cd ~/markdown-resume
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
#+END_SRC

*** 2) Verify the installer SHA-384

#+BEGIN_SRC 
php -r "if (hash_file('SHA384', 'composer-setup.php') === 'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
#+END_SRC

#+RESULTS:
Installer verified

*** 3) Run the installer
#+BEGIN_SRC 
$ php composer-setup.php
All settings correct for using Composer
Downloading 1.2.1...

Composer successfully installed to: /home/jing/markdown-resume/composer.phar
Use it: php composer.phar
#+END_SRC
*** 4) Remove the installer
#+BEGIN_SRC 
$ php -r "unlink('composer-setup.php');"
#+END_SRC
** Install dependencies

#+BEGIN_SRC 
$ php composer.phar install
Loading composer repositories with package information
Installing dependencies (including require-dev) from lock file
Warning: The lock file is not up to date with the latest changes in composer.json. You may be getting outdated dependencies. Run update to update them.
  - Installing symfony/finder (dev-master 1343b57)
    Cloning 1343b576d1401f4a5117cab4e250201ae348143a

  - Installing symfony/filesystem (dev-master 98e831e)
    Cloning 98e831eac836a0a5911626ce82684155f21d0e4d

  - Installing symfony/console (v2.3.4)
    Loading from cache

  - Installing sebastian/diff (dev-master ac84cfd)
    Cloning ac84cfdec593945f36f24074d6ea17d296e86f76

  - Installing fabpot/php-cs-fixer (v0.4.0)
    Loading from cache

  - Installing indeyets/pake (1.99.3)
    Loading from cache

  - Installing symfony/process (dev-master 8a3edac)
    Cloning 8a3edace8e8aabed8992b993bfc13df3b1e836f2

  - Installing kriswallsmith/assetic (v1.1.2)
    Loading from cache

  - Installing leafo/lessphp (v0.4.0)
    Loading from cache

  - Installing michelf/php-markdown (1.4.0)
    Loading from cache

  - Installing michelf/php-smartypants (1.6.0-beta1)
    Loading from cache

  - Installing mustache/mustache (v2.5.1)
    Loading from cache

  - Installing phpunit/php-token-stream (dev-master 955c24b)
    Cloning 955c24b708f8bfd6a05f303217a8dac3a443d531

  - Installing symfony/yaml (v2.3.4)
    Loading from cache

  - Installing phpunit/php-text-template (1.2.0)
    Loading from cache

  - Installing phpunit/phpunit-mock-objects (1.2.x-dev c39c451)
    Cloning c39c4511c3b007539eb170c32cbc2af49a07351a

  - Installing phpunit/php-timer (1.0.5)
    Loading from cache

  - Installing phpunit/php-file-iterator (1.3.4)
    Loading from cache

  - Installing phpunit/php-code-coverage (1.2.x-dev 6ef2bf3)
    Cloning 6ef2bf3a1c47eca07ea95f0d8a902a6340390b34

  - Installing phpunit/phpunit (3.7.x-dev ae6cefd)
    Cloning ae6cefd7cc84586a5ef27e04bae11ee940ec63dc

  - Installing squizlabs/php_codesniffer (1.5.3)
    Loading from cache

  - Installing sunra/php-simple-html-dom-parser (v1.5.0)
    Loading from cache

  - Installing symfony/config (v2.3.4)
    Loading from cache

  - Installing twig/twig (v1.13.2)
    Loading from cache

symfony/console suggests installing symfony/event-dispatcher ()
indeyets/pake suggests installing phing/phing (2.4.*)
indeyets/pake suggests installing simpletest/simpletest (1.1.*)
kriswallsmith/assetic suggests installing leafo/scssphp (Assetic provides the integration with the scssphp SCSS compiler)
kriswallsmith/assetic suggests installing leafo/scssphp-compass (Assetic provides the integration with the SCSS compass plugin)
kriswallsmith/assetic suggests installing ptachoire/cssembed (Assetic provides the integration with phpcssembed to embed data uris)
phpunit/php-code-coverage suggests installing ext-xdebug (>=2.0.5)
phpunit/phpunit suggests installing phpunit/php-invoker (~1.1)
Generating autoload files
#+END_SRC
** updated the libraries

#+BEGIN_SRC 
$ php composer.phar update
Loading composer repositories with package information
Updating dependencies (including require-dev)
  - Removing squizlabs/php_codesniffer (1.5.3)
  - Installing squizlabs/php_codesniffer (1.5.x-dev 6f3e42d)
    Cloning 6f3e42d311b882b25b4d409d23a289f4d3b803d5

  - Removing symfony/filesystem (dev-master)
  - Installing symfony/filesystem (2.8.x-dev 44b4995)
    Cloning 44b499521defddf2eae17a18c811bbdae4f98bdf

  - Removing symfony/finder (dev-master)
  - Installing symfony/finder (2.8.x-dev edb9822)
    Cloning edb9822044c046705c1a103e3b275296ae30f252

  - Removing symfony/process (dev-master)
  - Installing symfony/process (2.8.x-dev 05a03ed)
    Cloning 05a03ed27073638658cab9405d99a67dd1014987

  - Removing phpunit/php-file-iterator (1.3.4)
  - Installing phpunit/php-file-iterator (dev-master 6150bf2)
    Cloning 6150bf2c35d3fc379e50c7602b75caceaa39dbf0

  - Removing phpunit/php-text-template (1.2.0)
  - Installing phpunit/php-text-template (1.2.1)
    Loading from cache

  - Removing phpunit/php-timer (1.0.5)
  - Installing phpunit/php-timer (1.0.8)
    Loading from cache

  - Updating phpunit/php-token-stream dev-master (955c24b => cab6c6f)
    Checking out cab6c6fefee93d7b7c3a01292a0fe0884ea66644

  - Updating phpunit/php-code-coverage 1.2.x-dev (6ef2bf3 => fe24668)
    Checking out fe2466802556d3fe4e4d1d58ffd3ccfd0a19be0b

  - Updating phpunit/phpunit 3.7.x-dev (ae6cefd => 38709dc)
    Checking out 38709dc22d519a3d1be46849868aa2ddf822bcf6

Package fabpot/php-cs-fixer is abandoned, you should avoid using it. Use friendsofphp/php-cs-fixer instead.
Writing lock file
Generating autoload files
#+END_SRC

** Using ~md2resume_dev.php~

#+BEGIN_SRC 
$ php md2resume_dev.php
Markdown Resume Generator version 2.0.10 by Craig Davis

Usage:
  [options] command [arguments]

Options:
  --help           -h Display this help message.
  --quiet          -q Do not output any message.
  --verbose        -v|vv|vvv Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
  --version        -V Display this application version.
  --ansi              Force ANSI output.
  --no-ansi           Disable ANSI output.
  --no-interaction -n Do not ask any interactive question.

Available commands:
  help         Displays help for a command
  html         Generate an HTML resume from a markdown file
  list         Lists commands
  pdf          Generate a PDF from a markdown file
  selfupdate   Updates md2resume.phar to the latest version.
  stats        Generate a word frequency analysis of your resume
  templates    List available templates
  version      Show current version information
#+END_SRC
* Tips & Tricks
- [[https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet][Markdown Cheatsheet]]: helpful for formatting your document and finding out what formatting names markup symbols have
- Searching for e.g. "html li tag" and visiting https://www.w3schools.com/ is generally helpful if you forget what the tags mean
* How to use the Markdown Resume Generator
Github: [[https://github.com/there4/markdown-resume][Markdown Resume Generator]]

_See what user have done_
[[https://github.com/jalperin/markdown-resume/commits/master][jalperin's commits]]
[[https://github.com/adilapapaya/markdown-resume/commits/master][adilapapaya's commits]]

** How to use the standard version of the Markdown Resume Generator?
- There's is no installation or need to run composer if you do not intend to customize the css templates.
- all you have to do is to the download and run the phar file using the commands described below: [[https://github.com/there4/markdown-resume/raw/master/bin/md2resume][phar file]]
*** for html output
#+BEGIN_EXAMPLE
~/markdown-resume/bin/md2resume html ~/work/cv.md ~/work/
#+END_EXAMPLE

*** for pdf output
#+BEGIN_EXAMPLE 
~/markdown-resume/bin/md2resume pdf ~/work/cv.md ~/work/
#+END_EXAMPLE

** How to choose a template?
The templates available include: modern, blockish, unstyled, readable, swissen

Choose a template with the -t option:
#+BEGIN_EXAMPLE
~/there4-markdown-resume/bin/md2resume html --template swissen ~/work/cv.md ~/work/
#+END_EXAMPLE

** How to enable live html updates?
#+BEGIN_EXAMPLE
watch ~/markdown-resume/bin/md2resume html --refresh yes --template modern ~/work/cv.md ~/work/
#+END_EXAMPLE
** *How to use the Markdown Resume Generator with your own CSS settings?*
*** Generate CV
After installing composer, you can generate both the HTML and the PDF versions of the resume by running the ~md2resume_dev.php~ file from the command line
#+BEGIN_SRC 
php ~/markdown-resume/md2resume_dev.php html --template modern ~/work/docs/cv.md ~/work/docs/ && php ~/markdown-resume/md2resume_dev.php pdf --template modern ~/work/docs/cv.md ~/work/docs/
#+END_SRC

**** Not installed inthe ~$HOME~ folder
If ~markdown-resume~ and your ~work~ folder is not installed in the home directory, but still in the same directory:
#+begin_src 
cd [directory containing both markdown-resume and work folders]
php ./markdown-resume/md2resume_dev.php html --template modern ./work/docs/cv.md ./work/docs/ && php ./markdown-resume/md2resume_dev.php pdf --template modern ./work/docs/cv.md ./work/docs/
#+end_src

*** Generate personal statement
#+BEGIN_SRC 
php ~/markdown-resume/md2resume_dev.php pdf --template modern ~/work/ps.md ~/work/
#+END_SRC

*** For live updates
#+BEGIN_SRC 
watch php ~/markdown-resume/md2resume_dev.php html --refresh yes --template modern ~/work/cv.md ~/work/
#+END_SRC

** How to use generate CV to website repo with your own CSS settings
#+BEGIN_SRC 
php ~/markdown-resume/md2resume_dev.php html --template modern ~/work/docs/cv.md ~/jingxlim.github.io/ && php ~/markdown-resume/md2resume_dev.php pdf --template modern ~/work/docs/cv.md ~/jingxlim.github.io/
#+END_SRC
** What do normalize.css, screen.css and element.less do?
Adila's reply: https://github.com/there4/markdown-resume/issues/45#issuecomment-246189963

- *normalize.css* makes browsers render all elements more consistently and in line with modern standards. It precisely targets only the styles that need normalizing. I like to think of it as 'better default styles'. [External library]
- *screen.css* contains css for customizing the output to various screen sizes. [Custom to this project]
- *element.less* has a bunch of useful "mixins": http://lesselements.com [External library]

  If you're not familiar with .less files, Less is a CSS pre-processor, meaning that it extends the CSS language, adding features that allow variables, mixins, functions and many other techniques that allow you to make CSS that is more maintainable, themeable and extendable.

If you are interested in css on steroids, take a look at sass as well: http://sass-lang.com
